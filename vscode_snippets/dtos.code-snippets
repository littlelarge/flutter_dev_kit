{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"dto class": {
		"prefix": "dto",
		"body": [
			"import 'package:freezed_annotation/freezed_annotation.dart';",
			"",
			"part '${TM_FILENAME_BASE}.freezed.dart';",
			"part '${TM_FILENAME_BASE}.g.dart';",
			"",
			"@freezed",
			"abstract class ${1}Dto implements _$${1}Dto {",
			"  const factory ${1}Dto({${0}}) = _${1}Dto;",
			"",
			"  const ${1}Dto._();",
			"",
			"  factory ${1}Dto.fromJson(Map<String, dynamic> json) =>",
			"    _$${1}DtoFromJson(json);",
			"",
			"  factory ${1}Dto.fromDomain(${2} ${2}) {",
			"    return ${1}Dto();",
			"  }",
			"",
			" ${2} toDomain() {",
			"    return ${2}();",
			"  }",
			"}",
		],
		"description": "Dto Class"
	}
}