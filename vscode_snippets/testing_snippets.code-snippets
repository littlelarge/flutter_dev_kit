{
	"test aaa": {
		"scope": "dart",
		"prefix": "ta",
		"body": [
			"test('should $1', () {",
			"   // arrange",
			"   $2",
			"   // act",
			"   $3",
			"   // assert",
			"   $0",
			"});"
		],
		"description": "AAA test snippet"
	},
	"test group": {
		"scope": "dart",
		"prefix": "gt",
		"body": [
			"group(",
			"  '$0',",
			"  () {",
			"    test(",
			"      'should return [] when completes successfull',",
			"      () async {",
			"        // arrange",
			"",
			"        when(",
			"          () => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2(),",
			"        ).thenAnswer(",
			"          (_) async {",
			"            return $3;",
			"          },",
			"        );",
			"",
			"        // act",
			"",
			"        final result = await ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2();",
			"",
			"        // assert",
			"",
			"        verify(() => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2());",
			"        expect(result, $3);",
			"        verifyNoMoreInteractions(${1/(.)(.*)/${1:/downcase}${2}/}Repository);",
			"      },",
			"    );",
			"",
			"    test(",
			"      'should return [] when completes unsuccessful',",
			"      () async {",
			"        // arrange",
			"",
			"        when(",
			"          () => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2(),",
			"        ).thenAnswer(",
			"          (_) async {",
			"            return $4;",
			"          },",
			"        );",
			"",
			"        // act",
			"",
			"        final result = await ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2();",
			"",
			"        // assert",
			"",
			"        verify(() => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2());",
			"        expect(result, $4);",
			"        verifyNoMoreInteractions(${1/(.)(.*)/${1:/downcase}${2}/}Repository);",
			"      },",
			"    );",
			"  },",
			");",
		],
		"description": "group test snippet"
	},
	"test setUp": {
		"scope": "dart",
		"prefix": "su",
		"body": [
			"setUp(() {",
			"  $0",
			"});"
		],
		"description": "setUp test snippet"
	},
	"test file": {
		"scope": "dart",
		"prefix": "tr",
		"body": [
			"import 'package:flutter_test/flutter_test.dart';",
			"import 'package:mocktail/mocktail.dart';",
			"",
			"class Mock${1}Repository extends Mock implements I${1}Repository {}",
			"",
			"void main() {",
			"  late Mock${1}Repository ${1/(.)(.*)/${1:/downcase}${2}/}Repository;",
			"",
			"  const serverError = 'server error';",
			"",
			"  setUpAll(() {});",
			"",
			"  setUp(() {",
			"    ${1/(.)(.*)/${1:/downcase}${2}/}Repository = Mock${1}Repository();",
			"  });",
			"",
			"  group(",
			"    '$0',",
			"    () {",
			"      test(",
			"        'should return [] when completes successfull',",
			"        () async {",
			"          // arrange",
			"",
			"          when(",
			"            () => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2(),",
			"          ).thenAnswer(",
			"            (_) async {",
			"              return $3;",
			"            },",
			"          );",
			"",
			"          // act",
			"",
			"          final result = await ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2();",
			"",
			"          // assert",
			"",
			"          verify(() => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2());",
			"          expect(result, $3);",
			"          verifyNoMoreInteractions(${1/(.)(.*)/${1:/downcase}${2}/}Repository);",
			"        },",
			"      );",
			"",
			"      test(",
			"        'should return [] when completes unsuccessful',",
			"        () async {",
			"          // arrange",
			"",
			"          when(",
			"            () => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2(),",
			"          ).thenAnswer(",
			"            (_) async {",
			"              return $4;",
			"            },",
			"          );",
			"",
			"          // act",
			"",
			"          final result = await ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2();",
			"",
			"          // assert",
			"",
			"          verify(() => ${1/(.)(.*)/${1:/downcase}${2}/}Repository.$2());",
			"          expect(result, $4);",
			"          verifyNoMoreInteractions(${1/(.)(.*)/${1:/downcase}${2}/}Repository);",
			"        },",
			"      );",
			"    },",
			"  );",
			"}"
		],
		"description": "group test snippet"
	}
}