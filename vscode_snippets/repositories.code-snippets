{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Abstract Repository": {
		"prefix": "ar",
		"body": [
			"abstract interface class ${1} {${0}}",
			"",
		],
		"description": "Abstract Interface Repository"
	},
	"Repository Implementation": {
		"prefix": "ri",
		"body": [
			"import 'package:dio/dio.dart';",
			"",
			"@LazySingleton(as: I${1:NameOf}Repository)",
			"final class ${1:NameOf}Repository implements I${1:NameOf}Repository {",
			"  ${1:NameOf}Repository(this._dio);",
			"",
			"  final Dio _dio;",
			"",
			"}",
			"",
		],
		"description": "Repository Implementation"
	},
}